@import 'styles/mixins.scss';
@import 'styles/colors.scss';
@import 'styles/fonts.scss';

.wrapper {
    width: fit-content;
    font-family: LexendDeca;
    position: relative;
    color: $gray;
    margin-right: 48px;
    transition: all 400ms ease-out;
    .label {
        transition: all 400ms ease-out;
        margin-bottom: 10px;
        @include subHeading;
        margin-bottom: 10px;
        font-weight: 400;
    }

    .button {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 8px 16px;
        height: 52px;
        border: 1px solid #cccccc;
        border-radius: 8px;
        cursor: pointer;
        background-color: #fff;
        transition: all 400ms ease-out;

        &.disable {
            border-color: #cccccc;
        }

        .value {
            @include subHeading;
            margin: 0;

            &.disable {
                color: #cccccc;
            }
        }

        .icon {
            display: flex;
            align-items: center;

            transition: all 500ms ease-out;
            transform: rotate(360deg);

            &.rotate {
                transform: rotate(180deg);
            }
        }
    }

    .dropdownWrapper {
        position: relative;
        .dropdown {
            background-color: #fff;
            position: absolute;
            top: 16px;
            z-index: 1;

            transform: scale(0);
            transition: all 250ms ease-out;

            box-sizing: border-box;
            width: 166px;
            padding: 20px 24px;
            box-shadow: 0px 4px 32px rgba(61, 70, 112, 0.08);
            border-radius: 8px;

            display: flex;
            flex-direction: column;
            gap: 20px;
            color: #333333;

            .option {
                cursor: pointer;
                @include subHeading;

                transition: all 400ms ease-out;
                transform: translateX(-32px);
                opacity: 0;

                @for $i from 1 through 100 {
                    &.visible:nth-child(#{$i}) {
                        transition-delay: #{$i * 50}ms;
                    }
                }

                &.selected {
                    color: $gray;
                }

                &:hover {
                    color: $gray;
                }
            }

            &.enable {
                transform: scale(1);

                .visible {
                    opacity: 1;
                    transform: translateX(0px);
                }
            }
        }
    }
}
// To have hover effects on wrapperm in enabled state only,not for disabled
.enabledWrapper {
    &:hover {
        .label {
            color: $gray;
        }
        .button {
            border: 1px solid $gray;
        }
    }
}

.button {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 16px;
    height: 52px;
    width: 166px;

    border: 1px solid #cccccc;
    border-radius: 8px;
    cursor: pointer;
    background-color: #fff;

    &.disable {
        border-color: #b0b0b0;
    }

    .icon {
        display: flex;
        align-items: center;

        transition: all 500ms ease-out;
        transform: rotate(360deg);

        &.rotate {
            transform: rotate(180deg);
        }
    }
}

.menu {
    box-sizing: border-box;
    width: 166px;
    padding: 16px;
    box-shadow: 0px 4px 32px rgba(61, 70, 112, 0.08);
    border-radius: 8px;

    display: flex;
    flex-direction: column;
    gap: 16px;

    .el {
        cursor: pointer;
    }
}


@media (max-width: $small-screen) {
    .wrapper {
        .button {
            height: 32px;

            .icon {
                width: 8px;
            }
        }
    }

    .button {
        height: 32px;
    }
}
